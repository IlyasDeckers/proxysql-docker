#!/bin/bash

. /opt/proxysql/mycnf
. /opt/proxysql/update_serverlist
. /opt/proxysql/monitoring
. /opt/proxysql/cluster_health

create_backup() {
    mkdir -p foo/bar/baz
    find /var/backup -mtime +30 -type f -delete
    mysqldump --defaults-file=<(mysqldumpcnf_rootgen) --all-databases --single-transaction --set-gtid-purged=OFF --triggers --routines --events -vvvv > /var/backup/full_database_backup"$(date +'%Y-%m-%d-%H:%M:%S')".sql
}

get_host_ip() {
	ipaddr=$(hostname -i | awk ' { print $1 } ')
}

bootstrap_nodes() {
	for SERVER in $(curl -sS http://$DISCOVERY_SERVICE/v2/keys/galera/$CLUSTER_NAME/ | jq -r '.node.nodes[]?.key' | awk -F'/' '{print $(NF)}')
	do
		echo ${SERVER}

		get_host_ip

		mysql --defaults-file=<(mycnf_rootgen) -h ${SERVER} -e "GRANT ALL ON *.* TO '$MYSQL_PROXY_USER'@'%' IDENTIFIED BY '$MYSQL_PROXY_PASSWORD';"
		mysql --defaults-file=<(mycnf_gen) -e "INSERT INTO mysql_servers (hostgroup_id, hostname, port, max_replication_lag) VALUES (0, '$SERVER', 3306, 20);"
	done

	mysql --defaults-file=<(mycnf_gen) -e "INSERT INTO mysql_users (username, password, active, default_hostgroup, max_connections) VALUES ('$MYSQL_PROXY_USER', '$MYSQL_PROXY_PASSWORD', 1, 0, 200);"
	mysql --defaults-file=<(mycnf_gen) -e "LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK; LOAD MYSQL USERS TO RUNTIME; SAVE MYSQL USERS TO DISK;"

	setup_monitoring;
}

remove_etcd_keys() {
	echo ''
	echo "Looking for death or removed containers"
	echo ''

	OFFLINE_HARD=`mysql --defaults-file=<(mycnf_gen) --disable-column-names -e "SELECT srv_host FROM stats.stats_mysql_connection_pool WHERE status='OFFLINE_HARD';" | sort`
	SHUNNED=`mysql --defaults-file=<(mycnf_gen) --disable-column-names -e "SELECT srv_host FROM stats.stats_mysql_connection_pool WHERE status='SHUNNED';" | sort`

	OFFLINE="$OFFLINE_HARD $SHUNNED"

	echo $OFFLINE

	for i in $OFFLINE
	do
		curl -sS http://$DISCOVERY_SERVICE/v2/keys/galera/$CLUSTER_NAME/$i?recursive=true -XDELETE
		mysql --defaults-file=<(mycnf_gen) -e "DELETE FROM mysql_servers where hostname='$i';"
		echo "Deleted $i from etcd"
	done

}

new() {
    # Register new node with etcd
    ipaddr=$(hostname -i | awk ' { print $1 } ')
    hostname=$(hostname)
    
    curl http://$DISCOVERY_SERVICE/v2/keys/proxysql/$CLUSTER_NAME/$ipaddr/ipaddr -XPUT -d value="$ipaddr" -d ttl=30 2>>$ERR_FILE >>$ERR_FILE
    curl http://$DISCOVERY_SERVICE/v2/keys/proxysql/$CLUSTER_NAME/$ipaddr/hostname -XPUT -d value="$hostname" -d ttl=30 2>>$ERR_FILE >>$ERR_FILE
    curl http://$DISCOVERY_SERVICE/v2/keys/proxysql/$CLUSTER_NAME/$ipaddr -XPUT -d ttl=30 -d dir=true -d prevExist=true 2>>$ERR_FILE >>$ERR_FILE}
}

scale() {
    ipaddr=$(hostname -i | awk ' { print $1 } ')
    hostname=$(hostname)
    
    # Look for running nodes and get configuration
    for SERVER in $(curl -sS http://$DISCOVERY_SERVICE/v2/keys/proxysql/$CLUSTER_NAME/ | jq -r '.node.nodes[]?.key' | awk -F'/' '{print $(NF)}')
    then
    	# For every runnin proxysql node
	USERS=`mysql --defaults-file=<(mycnf_gen) -h $ipaddr --disable-column-names -e "SELECT * FROM mysql_users;"Â´
	# Get proxy users and copy to new node
	mysql --defaults-file=<(mycnf_gen) -h $ipaddr --disable-column-names -e "UPDATE something"
    fi 
}
